package scalc;

import java.util.LinkedList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import net.objecthunter.exp4j.ExpressionBuilder;
import org.pircbotx.PircBotX;
import org.pircbotx.hooks.events.MessageEvent;
import pl.shockah.Pair;
import scommands.Command;

public class CommandCalc extends Command {
	public static final Pattern
		REGEX_VARIABLE_ASSIGN = Pattern.compile("([a-zA-Z_][a-zA-Z_0-9]*)\\s?=\\s(.*)");
	
	public CommandCalc() {
		super("calc");
	}
	
	public void call(MessageEvent<PircBotX> e, String trigger, String args) {
		String[] spl = args.split(";");
		
		String expression = null;
		List<Pair<String, Double>> variables = new LinkedList<>();
		
		for (String s : spl) {
			Matcher m = REGEX_VARIABLE_ASSIGN.matcher(s);
			if (m.find()) {
				variables.add(new Pair<>(m.group(1), Double.parseDouble(m.group(2))));
			} else {
				expression = s;
			}
		}
		
		if (expression == null) {
			e.respond("Invalid expression.");
		} else {
			ExpressionBuilder exprb = new ExpressionBuilder(expression);
			for (Pair<String, Double> pair : variables) {
				
			}
		}
	}
}